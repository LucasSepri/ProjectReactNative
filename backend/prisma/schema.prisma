generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//criar uma migration: yarn prisma migrate dev 
model User {
  id          String    @id @default(uuid())
  name        String
  email       String    @unique
  password    String
  phone       String?   // Novo campo para o telefone de contato
  address     String?   // Novo campo para o endereço
  isAdmin     Boolean   @default(false)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now())
  profileImage String?  // Campo para armazenar a URL da imagem de perfil

  orders      Order[]   // Relacionamento: um usuário pode ter vários pedidos

  @@map("users")
}

model Category {
  id          String      @id @default(uuid())
  name        String
  created_at  DateTime?   @default(now())
  updated_at  DateTime?   @default(now())

  products    Product[]
  
  @@map("categories")
}

model Product {
  id            String      @id @default(uuid())
  name          String
  price         String
  description   String
  banner        String
  created_at    DateTime?   @default(now())
  updated_at    DateTime?   @default(now())

  category      Category    @relation(fields: [category_id], references: [id])

  @@map("products")
  category_id   String
  items         Item[]
}

model Order {
  id            String      @id @default(uuid())
  table         Int?        // Campo opcional para a mesa
  address       String?     // Novo campo opcional para o endereço
  status        String      // Status do pedido: "Entregue", "Em andamento" ou "Cancelado"
  descricao     String      // Descrição do pedido
  precoTotal    Float       // Preço total do pedido
  draft         Boolean     @default(true)

  created_at    DateTime    @default(now())
  updated_at    DateTime    @default(now())

  client        User?       @relation(fields: [client_id], references: [id])

  @@map("orders")
  items         Item[]
  client_id     String?
}

model Item {
  id            String      @id @default(uuid())
  amount        Int

  created_at    DateTime?   @default(now())
  updated_at    DateTime?   @default(now())

  order         Order       @relation(fields: [order_id], references: [id])
  product       Product     @relation(fields: [product_id], references: [id])

  @@map("items")
  order_id      String
  product_id    String
}
